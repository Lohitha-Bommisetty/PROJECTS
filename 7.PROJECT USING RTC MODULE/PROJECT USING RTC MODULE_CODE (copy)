#include <Wire.h>
#include <RTClib.h>
#include <LiquidCrystal_I2C.h>
LiquidCrystal_I2C lcd(0x27, 16, 2);
RTC_DS1307 RTC;
 

bool newData; //new data on serial
bool watering = false; //status if watering is allowed or not
bool wateredtoday = false;
 
int wateringhour = 9; // water at 9:00 o'clock in the morning (24h time format!)
float wateringlength = 6000; //10 sec default watering (pumping time)
 
const int relaypin = 2;
const int switchpin = 3;
int switchstate = 0;
char receivedCommand;
  
void setup()
{
  lcd.init();                      
  lcd.init();
  lcd.backlight();
  
  pinMode(relaypin, OUTPUT);
  pinMode(switchpin, INPUT);
  Serial.begin(9600);
  Wire.begin();
  RTC.begin();
 
  if (! RTC.isrunning())
  {
    Serial.println("RTC is NOT running!");
    RTC.adjust(DateTime(__DATE__, __TIME__));
  }
  Serial.println("Irrigation system.");
  lcd.clear();
  lcd.setCursor(0,0); 
  lcd.print("Watering System");
  lcd.setCursor(0,1);
  lcd.print("Start in 5..."); 
  delay(1000); 
  lcd.setCursor(0,1);
  lcd.print("Start in 4..."); 
  delay(1000); 
  lcd.setCursor(0,1);
  lcd.print("Start in 3..."); 
  delay(1000); 
  lcd.setCursor(0,1);
  lcd.print("Start in 2..."); 
  delay(1000); 
  lcd.setCursor(0,1);
  lcd.print("Start in 1..."); 
  delay(1000);
}
 
void loop()
{

 printtime();
 checkSerial();
 checktime();
 switchcheck();
 executecommand();
 
}

void checkSerial()
{

     if (Serial.available() > 0)
     {
        receivedCommand = Serial.read();
        newData = true;
     }
     if (newData == true) {
 
      if(receivedCommand == 'w') 
      {
        watering = true;   
      }
 
      if(receivedCommand == 's') 
      {
         watering = false;
      }  
    }
    else
    {}
    newData = false;  
 
}

void executecommand() 
{
  if(watering == true)
  {

    digitalWrite(relaypin, HIGH);
  
    lcd.clear();
    lcd.setCursor(0,0); //Defining positon to write from first row,first column .
    lcd.print("Watering");
    lcd.setCursor(0,1);
    lcd.print("Running"); //You can write 16 Characters per line .
 
    delay(wateringlength);
   
    digitalWrite(relaypin, LOW);

    lcd.clear();
    //---Disable watering
    watering = false;
    //--Change the value of the bool, so we'll know that the watering had happened
    wateredtoday = true;      
  }
  else
  {
   //do not do anything
  }
  //---------------------------  
 
}
 
//----------------------------------------------------------------------------------
 
void printtime()
{
    //it is just a basic RTC and LCD exercise: reading the date and time and printing it with some formatting
    DateTime now = RTC.now();
    //-----------------
    //--First line
    lcd.clear();
    lcd.setCursor(0,0); //Defining positon to write from first row,first column .
    lcd.print(now.year());
    lcd.setCursor(4,0);
    lcd.print(".");
    lcd.setCursor(5,0);
    lcd.print(now.month());
    lcd.setCursor(7,0);
    lcd.print(".");
    lcd.setCursor(8,0);
    lcd.print(now.day());
    lcd.setCursor(11,0);
    lcd.print("water");
    //-----------------
    //--Second line
    lcd.setCursor(0,1);
    lcd.print(now.hour()); //You can write 16 Characters per line .
    lcd.setCursor(2,1);
    lcd.print(":");
    lcd.setCursor(3,1);
    lcd.print(now.minute());
    lcd.setCursor(5,1);
    lcd.print(":");
    lcd.setCursor(6,1);
    lcd.print(now.second());
    lcd.setCursor(10,1);
    //if the watering had happened, then we print it on the screen.
    if(wateredtoday == true)
    {lcd.print("true");}
    else
    {lcd.print("false");}    
   
    //----------------------------------------
    Serial.print(now.year(), DEC);
    Serial.print('/');
    Serial.print(now.month(), DEC);
    Serial.print('/');
    Serial.print(now.day(), DEC);
    Serial.print(' ');
    Serial.print(now.hour(), DEC);
    Serial.print(':');
    Serial.print(now.minute(), DEC);
    Serial.print(':');
    Serial.print(now.second(), DEC);
    Serial.println();
    delay(1000);
}
//----------------------------------------------------------------------------------
 
void checktime()
{
  //Here, we check the time, so we can see if the watering should be started
  DateTime now = RTC.now();  
 
  //after the watering time occured, we switch the variable back to false so when the
  //time occurs again (i.e. it is 9:00 in the morning) the watering will be started again
  if(now.hour() == (wateringhour +1))
  {    
    //Serial.println("Watered");
    wateredtoday = false;
  }
 
  //If it is time to water, and we haven't watered, we enable watering
  if(now.hour() == wateringhour && wateredtoday == false)
  {
    //Serial.println("Not watered");
    watering = true;  
    wateredtoday = true;
  }
 
}
 
void switchcheck()
{
  //We check the switch which is used to manually run the pump
  //this does not change ANYTHING with the regular, scheduled pumping.
 
  //Serial.println("SwitchCheck");
 
  switchstate = digitalRead(switchpin); //read the pin
 
  if (switchstate == HIGH) {    
 
  //Serial.println("switch is HIGH");
  //Serial.println(digitalRead(switchpin));
 
  digitalWrite(relaypin, HIGH);
   
  } else {
   
    digitalWrite(relaypin, LOW);
    //Serial.println("switch is LOW");
   // Serial.println(digitalRead(switchpin));
 
  }
 
}
