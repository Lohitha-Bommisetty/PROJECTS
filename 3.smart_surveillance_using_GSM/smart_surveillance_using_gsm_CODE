#include <SoftwareSerial.h>
SoftwareSerial mySerial(9, 10); // RX, TX
const int trigPin = 11;
const int echoPin = 12;
const int redLedPin = 4;
const int greenLedPin = 13;

int smsCount = 0;
bool isActivated = false;

void setup() {
    pinMode(trigPin, OUTPUT);
    pinMode(echoPin, INPUT);
    pinMode(redLedPin, OUTPUT);
    pinMode(greenLedPin, OUTPUT);
    mySerial.begin(9600);
    Serial.begin(9600);
}

void loop() {
    if (!isActivated) {
        checkForActivation();
    } else {
        monitorDistance();
    }
}

void checkForActivation() {
    if (mySerial.available() > 0) {
        char inchar = mySerial.read();
        if (inchar == '%' && mySerial.available() > 0 && mySerial.read() == '@' &&
            mySerial.available() > 0 && mySerial.read() == '$') {
            isActivated = true;
            sendInitialMessage();
        }
    }
}

void sendInitialMessage() {
    sendTextMessage("Burglar alarm system activated !!");
}

void monitorDistance() {
    int distance = getDistance();
    Serial.print("Distance: ");
    Serial.println(distance);

    if (distance < 20) {
        handleIntruder();
    } else {
        resetAlarm();
    }
}

int getDistance() {
    digitalWrite(trigPin, LOW);
    delayMicroseconds(2);
    digitalWrite(trigPin, HIGH);
    delayMicroseconds(10);
    digitalWrite(trigPin, LOW);
    long duration = pulseIn(echoPin, HIGH);
    return duration * 0.034 / 2; // Distance in cm
}

void handleIntruder() {
    if (smsCount < 3) {
        sendTextMessage("ALERT !!! Someone entered.");
        smsCount++;
        redLedOn();
        greenLedOff();
    } else {
        Serial.println("Maximum SMS limit reached.");
        redLedOff();
        greenLedOn();
    }
}

void sendTextMessage(const String& message) {
    mySerial.println("AT+CMGF=1"); // Set SMS to text mode
    delay(1000);
    mySerial.println("AT+CMGS=\"+91 7075071942\"\r"); // Replace with your phone number
    delay(1000);
    mySerial.println(message);
    delay(200);
    mySerial.println((char)26); // End of message character
    delay(1000);
}

void resetAlarm() {
    redLedOff();
    greenLedOn();
}

void redLedOn() {
    digitalWrite(redLedPin, HIGH);
}

void redLedOff() {
    digitalWrite(redLedPin, LOW);
}

void greenLedOn() {
    digitalWrite(greenLedPin, HIGH);
}

void greenLedOff() {
    digitalWrite(greenLedPin, LOW);
}

